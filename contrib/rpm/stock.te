policy_module(stock, 1.100.1)

########################################
#
# Declarations
#

type stock_t;
type stock_exec_t;
init_daemon_domain(stock_t, stock_exec_t)

permissive stock_t;

type stock_initrc_exec_t;
init_script_file(stock_initrc_exec_t)

type stock_conf_t;
files_type(stock_conf_t)

type stock_var_lib_t;
files_type(stock_var_lib_t)

type stock_var_run_t;
files_type(stock_var_run_t)

type stock_port_t;
corenet_port(stock_port_t)

########################################
#
# stock local policy
#
allow stock_t self:process { fork };

allow stock_t self:fifo_file rw_fifo_file_perms;
allow stock_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(stock_t, stock_conf_t, stock_conf_t)
manage_files_pattern(stock_t, stock_conf_t, stock_conf_t)

manage_dirs_pattern(stock_t, stock_var_lib_t, stock_var_lib_t)
manage_files_pattern(stock_t, stock_var_lib_t, stock_var_lib_t)
files_var_lib_filetrans(stock_t, stock_var_lib_t, { dir file })

manage_dirs_pattern(stock_t, stock_var_run_t, stock_var_run_t)
manage_files_pattern(stock_t, stock_var_run_t, stock_var_run_t)

sysnet_dns_name_resolve(stock_t)
corenet_all_recvfrom_unlabeled(stock_t)

allow stock_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(stock_t)
corenet_tcp_sendrecv_generic_node(stock_t)
corenet_tcp_sendrecv_all_ports(stock_t)
corenet_tcp_bind_generic_node(stock_t)

gen_require(`
    type stock_port_t;
')
allow stock_t stock_port_t:tcp_socket name_bind;

gen_require(`
    type stock_port_t;
')
allow stock_t stock_port_t:tcp_socket name_connect;

domain_use_interactive_fds(stock_t)

files_read_etc_files(stock_t)

miscfiles_read_localization(stock_t)

sysnet_dns_name_resolve(stock_t)

allow stock_t stock_exec_t:file execute_no_trans;
allow stock_t self:process setsched;
corecmd_exec_ls(stock_t)
corenet_tcp_connect_http_port(stock_t)
dev_read_urand(stock_t)
fs_getattr_xattr_fs(stock_t)
kernel_read_system_state(stock_t)
